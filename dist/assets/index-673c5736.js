!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const e="YHDZFhXKUHVsS2EqGgOTapNxZVpiVCkO6XdtQmxHGXdVI2pzl5GqGQVl3kji22wO",t="4056844892",o="https://api.latch.bio";let n,s,c,r,i;async function l(){const n=parseInt(i.value)||0;r.disabled=!0,a("Sending unlock command...","pending");try{u(`Attempting to unlock door with auto-close time: ${n}s`);const s=await async function(n=0){try{u("Preparing API request");const s=await fetch(`${o}/door/unlock`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({pin:t,auto_close_time:n})}),c=await s.json();return u("API response received",!1,c),s.ok?{success:!0,data:c}:{success:!1,message:c.message||`Server error: ${s.status}`}}catch(s){throw u(`API request failed: ${s.message}`,!0),s}}(n);s.success?(a("Door unlocked successfully!","success"),u("Door unlocked successfully")):(a(`Failed to unlock: ${s.message}`,"error"),u(`Unlock failed: ${s.message}`,!0))}catch(s){a("Error communicating with door system","error"),u(`Error: ${s.message}`,!0)}finally{r.disabled=!1}}function a(e,t=""){s&&(s.textContent=e,s.className="status",t&&s.classList.add(t))}function u(e,t=!1,o=null){if(!c)return;const n=(new Date).toLocaleTimeString(),s=document.createElement("div");s.className="log-entry";const r=document.createElement("span");if(r.className="timestamp",r.textContent=`[${n}]`,s.appendChild(r),s.appendChild(document.createTextNode(` ${e}`)),t&&(s.style.color="#e74c3c"),o){const e=document.createElement("pre");e.textContent="object"==typeof o?JSON.stringify(o,null,2):o,s.appendChild(e)}c.appendChild(s),c.scrollTop=c.scrollHeight,t?console.error(e,o||""):console.log(e,o||"")}document.addEventListener("DOMContentLoaded",(()=>{n=document.querySelector("#app"),n.innerHTML='\n    <div class="container">\n      <h1>Door Lock Control</h1>\n      \n      <div class="control-panel">\n        <div class="input-group">\n          <label for="auto-close-time">Auto-close after (seconds):</label>\n          <input type="number" id="auto-close-time" min="0" max="300" value="30">\n        </div>\n        \n        <button id="unlock-button" class="primary-btn">Unlock Door</button>\n        \n        <div id="status" class="status"></div>\n      </div>\n      \n      <div class="debug-section">\n        <h3>System Log</h3>\n        <div id="debug-output" class="debug-output"></div>\n      </div>\n    </div>\n  ',s=document.querySelector("#status"),c=document.querySelector("#debug-output"),r=document.querySelector("#unlock-button"),i=document.querySelector("#auto-close-time"),r.addEventListener("click",l),u("Application initialized"),u("Configuration loaded successfully")}));
//# sourceMappingURL=index-673c5736.js.map
