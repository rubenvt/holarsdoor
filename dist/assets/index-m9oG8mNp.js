(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const t of o.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&r(t)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();document.querySelector("#app").innerHTML=`
  <div class="container">
    <h1>Door Lock Control</h1>
    <div class="control-panel">
      <div class="input-group">
        <label for="close-time">Auto-close after (seconds):</label>
        <input type="number" id="close-time" min="1" max="60" value="5">
      </div>
      <button id="open-door" class="primary-btn">Open Door</button>
      <div id="status-message" class="status"></div>
      <div class="debug-section">
        <h3>Debug Information</h3>
        <div id="debug-output" class="debug-output"></div>
        <button id="toggle-simulation" class="secondary-btn">Use Real API</button>
        <div class="simulation-status">Current mode: <span id="api-mode">Simulation</span></div>
      </div>
    </div>
  </div>
`;document.addEventListener("DOMContentLoaded",()=>{const c=document.getElementById("open-door"),i=document.getElementById("close-time"),s=document.getElementById("status-message"),r=document.getElementById("debug-output"),e=document.getElementById("toggle-simulation"),o=document.getElementById("api-mode");let t=!1;e.addEventListener("click",()=>{t=!t,o.textContent=t?"Real API":"Simulation",e.textContent=t?"Use Simulation":"Use Real API",l(`Switched to ${t?"real API":"simulation"} mode`)}),c.addEventListener("click",async()=>{const a=parseInt(i.value,10);if(isNaN(a)||a<1){s.textContent="Please enter a valid time (minimum 1 second)",s.className="status error";return}try{c.disabled=!0,s.textContent="Sending request...",s.className="status pending",m(),l(`Initiating door open request with auto-close time: ${a} seconds`),l(`Using ${t?"real API":"simulation"}`);let n;t?n=await y(a):n=await f(a),l("Response received:",n),s.textContent=`Door opened successfully! Will close in ${a} seconds.`,s.className="status success"}catch(n){l("Error occurred:",n),s.textContent=`Error: ${n.message}`,s.className="status error"}finally{c.disabled=!1}});function m(){r.innerHTML=""}function l(a,n){const p=new Date().toLocaleTimeString(),u=document.createElement("div");u.className="log-entry";let g=`<span class="timestamp">[${p}]</span> ${a}`;if(n){let d;try{d=typeof n=="object"?JSON.stringify(n,null,2):n}catch{d=String(n)}g+=`<pre>${d}</pre>`}u.innerHTML=g,r.appendChild(u),r.scrollTop=r.scrollHeight,console.log(`[${p}] ${a}`,n||"")}});function f(c){return new Promise(i=>{const e={authorization:"YTIvuZxYXbH0Xk0CBAwMXyiOTDMTaAzwCL9e1o2TPIZbToFCNk5ApzWJwqZFmycV",lpin:"7079171042",cmd:JSON.stringify({output:{node:"1",time:c.toString()}})};console.log("API parameters that would be sent:",e),setTimeout(()=>{const o={success:!0,message:"Door operation simulated successfully",timestamp:new Date().toISOString(),request:e};i(o)},1500)})}async function y(c){const i="YTIvuZxYXbH0Xk0CBAwMXyiOTDMTaAzwCL9e1o2TPIZbToFCNk5ApzWJwqZFmycV",s="7079171042",e={output:{node:"1",time:c.toString()}},o=new URLSearchParams({authorization:i,lpin:s,cmd:JSON.stringify(e)});console.log("Sending real API request with params:",{authorization:"***"+i.substring(i.length-5),lpin:"***"+s.substring(s.length-4),cmd:JSON.stringify(e)});try{const t=await fetch("https://iot-portal.com/api/device.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:o});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){throw console.error("API request error:",t),new Error("Failed to send door command: "+t.message)}}
