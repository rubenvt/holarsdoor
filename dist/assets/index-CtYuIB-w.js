(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function o(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=o(e);fetch(e.href,t)}})();document.querySelector("#app").innerHTML=`
  <div class="container">
    <h1>Door Lock Control</h1>
    <div class="control-panel">
      <div class="input-group">
        <label for="close-time">Auto-close after (seconds):</label>
        <input type="number" id="close-time" min="1" max="60" value="5">
      </div>
      <button id="open-door" class="primary-btn">Open Door</button>
      <div id="status-message" class="status"></div>
      <div class="debug-section">
        <h3>Debug Information</h3>
        <div id="debug-output" class="debug-output"></div>
        <button id="toggle-simulation" class="secondary-btn">Use Real API</button>
        <div class="simulation-status">Current mode: <span id="api-mode">Simulation</span></div>
      </div>
    </div>
  </div>
`;document.addEventListener("DOMContentLoaded",()=>{const c=document.getElementById("open-door"),i=document.getElementById("close-time"),o=document.getElementById("status-message"),r=document.getElementById("debug-output"),e=document.getElementById("toggle-simulation"),t=document.getElementById("api-mode");let s=!1;e.addEventListener("click",()=>{s=!s,t.textContent=s?"Real API":"Simulation",e.textContent=s?"Use Simulation":"Use Real API",l(`Switched to ${s?"real API":"simulation"} mode`)}),c.addEventListener("click",async()=>{const a=parseInt(i.value,10);if(isNaN(a)||a<1){o.textContent="Please enter a valid time (minimum 1 second)",o.className="status error";return}try{c.disabled=!0,o.textContent="Sending request...",o.className="status pending",g(),l(`Initiating door open request with auto-close time: ${a} seconds`),l(`Using ${s?"real API":"simulation"}`);let n;s?n=await y(a):n=await f(a),l("Response received:",n),o.textContent=`Door opened successfully! Will close in ${a} seconds.`,o.className="status success"}catch(n){l("Error occurred:",n),o.textContent=`Error: ${n.message}`,o.className="status error"}finally{c.disabled=!1}});function g(){r.innerHTML=""}function l(a,n){const m=new Date().toLocaleTimeString(),u=document.createElement("div");u.className="log-entry";let p=`<span class="timestamp">[${m}]</span> ${a}`;if(n){let d;try{d=typeof n=="object"?JSON.stringify(n,null,2):n}catch{d=String(n)}p+=`<pre>${d}</pre>`}u.innerHTML=p,r.appendChild(u),r.scrollTop=r.scrollHeight,console.log(`[${m}] ${a}`,n||"")}});function f(c){return new Promise(i=>{const e={authorization:"YHDZFhXKUHVsS2EqGgOTapNxZVpiVCkO6XdtQmxHGXdVI2pzl5GqGQVl3kji22wO",lpin:"4056844892",cmd:JSON.stringify({output:{node:"1",time:c.toString()}})};console.log("API parameters that would be sent:",e),setTimeout(()=>{const t={success:!0,message:"Door operation simulated successfully",timestamp:new Date().toISOString(),request:e};i(t)},1500)})}async function y(c){const i="YHDZFhXKUHVsS2EqGgOTapNxZVpiVCkO6XdtQmxHGXdVI2pzl5GqGQVl3kji22wO",o="4056844892",e={output:{node:"1",time:c.toString()}},t=new URLSearchParams({authorization:i,lpin:o,cmd:JSON.stringify(e)});console.log("Sending real API request with params:",{authorization:"***"+i.substring(i.length-5),lpin:"***"+o.substring(o.length-4),cmd:JSON.stringify(e)});try{const s=await fetch("https://iot-portal.com/api/device.php",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t,mode:"no-cors"});return console.log("Request sent in no-cors mode"),{success:!0,message:"Door command sent successfully (no response details available due to CORS restrictions)",corsMode:"no-cors"}}catch(s){throw console.error("API request error:",s),new Error("Failed to send door command: "+s.message)}}
